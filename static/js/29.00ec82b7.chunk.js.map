{"version":3,"file":"static/js/29.00ec82b7.chunk.js","mappings":"sPAEaA,EAAWC,EAAAA,EAAAA,IAAH,iGASRC,EAAWD,EAAAA,EAAAA,IAAH,2H,SCkCrB,EAxCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GAAO,OAAIN,EAAQM,EAAQP,KAApB,IACZQ,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,SACpBV,EAAQ,GACT,GACJ,GAAE,CAACC,IAIJ,OACE,wBACGF,EAAKY,KAAI,SAAAC,GAAK,OACb,UAACjB,EAAD,WACGiB,EAAMC,eACL,gBACEC,IAAG,UARE,mCAQF,OAAgBF,EAAMC,cACzBE,IAAKH,EAAMI,KACXC,MAAM,SAGV,UAACpB,EAAD,YACE,0BACE,iCADF,IACgBe,EAAMI,SAEtB,0BACE,sCADF,IACqBJ,EAAMM,kBAbhBN,EAAMO,GADR,KAqBpB,C,kMCzCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,+FACrBC,EAAS,CACbC,QAASH,EACTI,KAAM,GAHmB,SAKJL,EAAAA,EAAAA,IAAU,sBAAuB,CAAEG,OAAAA,IAL/B,uBAKnBG,EALmB,EAKnBA,KALmB,kBAMpBA,EAAKC,SANe,2CAAH,qDASbC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBN,EAAS,CACbC,QAASH,EACTI,KAAM,EACNI,MAAAA,GAJ6B,SAMRT,EAAAA,EAAAA,IAAU,gBAAiB,CAAEG,OAAAA,IANrB,uBAMvBG,EANuB,EAMvBA,KANuB,kBAOxBA,EAAKC,QAAQG,QAAO,SAAAC,GAAK,OAC9BA,EAAMC,MAAMC,cAAcC,SAASL,EAAMI,cADX,KAPD,2CAAH,sDAYjBE,EAAa,mCAAG,WAAMlC,GAAN,kFACrBsB,EAAS,CACbC,QAASH,EACTI,KAAM,GAHmB,SAKJL,EAAAA,EAAAA,IAAA,iBAAoBnB,GAAW,CAAEsB,OAAAA,IAL7B,uBAKnBG,EALmB,EAKnBA,KACRjB,QAAQ2B,IAAIV,GANe,kBAOpBA,GAPoB,2CAAH,sDAUbtB,EAAS,mCAAG,WAAMH,GAAN,kFACjBsB,EAAS,CACbC,QAASH,EACTI,KAAM,EACNY,SAAU,SAJW,SAMAjB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAAuC,CAAEsB,OAAAA,IANzC,uBAMfG,EANe,EAMfA,KANe,kBAOhBA,GAPgB,2CAAH,sDAUTY,EAAY,mCAAG,WAAMrC,GAAN,kFACpBsB,EAAS,CACbC,QAASH,EACTI,KAAM,EACNY,SAAU,SAJc,SAMHjB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAAuC,CAAEsB,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,EAAKC,SAPc,2CAAH,qD","sources":["components/Cast.styled.jsx","components/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastItem = styled.div`\n  display: flex;\n  gap: 24px;\n\n  & + & {\n    margin-top: 16px;\n  }\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api';\nimport { CastItem, CastInfo } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(credits => setCast(credits.cast))\n      .catch(error => {\n        console.error(error.message);\n        setCast([]);\n      });\n  }, [movieId]);\n\n  const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <ul>\n      {cast.map(actor => (\n        <CastItem key={actor.id}>\n          {actor.profile_path && (\n            <img\n              src={`${imageUrl}${actor.profile_path}`}\n              alt={actor.name}\n              width=\"120\"\n            />\n          )}\n          <CastInfo>\n            <p>\n              <b>Name:</b> {actor.name}\n            </p>\n            <p>\n              <b>Character:</b> {actor.character}\n            </p>\n          </CastInfo>\n        </CastItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0cafd553b6a217ff7b99743b1693af60';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n"],"names":["CastItem","styled","CastInfo","useState","cast","setCast","movieId","useParams","useEffect","fetchCast","then","credits","catch","error","console","message","map","actor","profile_path","src","alt","name","width","character","id","axios","API_KEY","fetchTrending","params","api_key","page","data","results","fetchSearchResult","query","filter","movie","title","toLowerCase","includes","fetchOneMovie","log","language","fetchReviews"],"sourceRoot":""}