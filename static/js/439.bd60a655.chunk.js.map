{"version":3,"file":"static/js/439.bd60a655.chunk.js","mappings":"mRAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mZAqBVE,EAAmBF,EAAAA,EAAAA,IAAH,0CAIhBG,EAAYH,EAAAA,EAAAA,IAAH,gFAMTI,EAAiBJ,EAAAA,EAAAA,IAAH,yFAKdK,EAAiBL,EAAAA,EAAAA,GAAH,6CAIdM,GAAcN,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oP,SC6CxB,EA3EqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GACXI,MAAK,SAAAC,GAAW,OAAIZ,EAASY,EAAb,IAChBC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,SACpBhB,EAAS,CAAC,EACX,GACJ,GAAE,CAACO,IAQJ,IAAQU,EAAWlB,EAAXkB,OACFC,EAAc,IAAIC,KAAKpB,EAAMqB,cAAcC,cAE3CC,EAAavB,EAAMwB,YACnBC,EAAsBzB,EAAM0B,qBAElC,OACE,UAAChC,EAAD,YACE,UAACH,EAAD,CAAYoC,GAAIvB,EAAoBwB,QAApC,WACE,SAAC,MAAD,IADF,cAIA,UAACjC,EAAD,WACG4B,IACC,gBAAKM,IAAG,UAZC,mCAYD,OAAgBN,GAAcO,IAAK9B,EAAM+B,SAEnD,4BACE,0BACG/B,EAAM+B,MADT,KACkBZ,GAA4BnB,EAAMgC,OADpD,QAGA,oCACW,IACRP,GACCA,EAAoBQ,KAAI,SAAAC,GAAO,OAAIA,EAAQC,IAAZ,IAAkBC,KAAK,UAE1D,wCA/BR,WACE,IAAMC,EAAUrC,EAAMsC,aAEtB,OADkBC,KAAKC,MAAgB,GAAVH,GAAcI,QAAQ,GAAK,GAEzD,CA2BuBC,OAChB,sCACA,uBAAI1C,EAAM2C,YACV,oCACA,yBAAIzB,GAAUA,EAAOe,KAAI,SAAAW,GAAK,OAAIA,EAAMT,IAAV,IAAgBC,KAAK,KAAnD,cAGJ,UAACxC,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,UAACC,EAAD,CAAa6B,GAAG,OAAhB,WACE,SAAC,MAAD,IADF,aAKF,yBACE,UAAC7B,EAAD,CAAa6B,GAAG,UAAhB,WACE,SAAC,MAAD,IADF,mBAMJ,SAAC,KAAD,SAIP,C,kMCpFDkB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,+FACrBC,EAAS,CACbC,QAASH,EACTI,KAAM,GAHmB,SAKJL,EAAAA,EAAAA,IAAU,sBAAuB,CAAEG,OAAAA,IAL/B,uBAKnBG,EALmB,EAKnBA,KALmB,kBAMpBA,EAAKC,SANe,2CAAH,qDASbC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBN,EAAS,CACbC,QAASH,EACTI,KAAM,EACNI,MAAAA,GAJ6B,SAMRT,EAAAA,EAAAA,IAAU,gBAAiB,CAAEG,OAAAA,IANrB,uBAMvBG,EANuB,EAMvBA,KANuB,kBAOxBA,EAAKC,QAAQG,QAAO,SAAAvD,GAAK,OAC9BA,EAAM+B,MAAMyB,cAAcC,SAASH,EAAME,cADX,KAPD,2CAAH,sDAYjB7C,EAAa,mCAAG,WAAMH,GAAN,kFACrBwC,EAAS,CACbC,QAASH,EACTI,KAAM,GAHmB,SAKJL,EAAAA,EAAAA,IAAA,iBAAoBrC,GAAW,CAAEwC,OAAAA,IAL7B,uBAKnBG,EALmB,EAKnBA,KACRnC,QAAQ0C,IAAIP,GANe,kBAOpBA,GAPoB,2CAAH,sDAUbQ,EAAS,mCAAG,WAAMnD,GAAN,kFACjBwC,EAAS,CACbC,QAASH,EACTI,KAAM,EACNU,SAAU,SAJW,SAMAf,EAAAA,EAAAA,IAAA,iBAAoBrC,EAApB,YAAuC,CAAEwC,OAAAA,IANzC,uBAMfG,EANe,EAMfA,KANe,kBAOhBA,GAPgB,2CAAH,sDAUTU,EAAY,mCAAG,WAAMrD,GAAN,kFACpBwC,EAAS,CACbC,QAASH,EACTI,KAAM,EACNU,SAAU,SAJc,SAMHf,EAAAA,EAAAA,IAAA,iBAAoBrC,EAApB,YAAuC,CAAEwC,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,EAAKC,SAPc,2CAAH,qD","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const BackButton = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 8px 16px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  transition: border-color 400ms ease, color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #ff7341;\n    color: #ff7341;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  padding: 24px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n`;\n\nexport const SubMenuLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  text-decoration: none;\n  color: inherit;\n  font-size: 24px;\n  transition: color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #ff7341;\n  }\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { fetchOneMovie } from 'services/api';\nimport { RxArrowLeft, RxArrowRight } from 'react-icons/rx';\nimport {\n  BackButton,\n  DetailsContainer,\n  MovieInfo,\n  AdditionalInfo,\n  AdditionalList,\n  SubMenuLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchOneMovie(movieId)\n      .then(chosenMovie => setMovie(chosenMovie))\n      .catch(error => {\n        console.error(error.message);\n        setMovie({});\n      });\n  }, [movieId]);\n\n  function countUserScore() {\n    const average = movie.vote_average;\n    const userScore = Math.round(average * 10).toFixed(0) + '%';\n    return userScore;\n  }\n\n  const { genres } = movie;\n  const releaseDate = new Date(movie.release_date).getFullYear();\n  const imageUrl = 'https://image.tmdb.org/t/p/w300';\n  const posterPath = movie.poster_path;\n  const productionCountries = movie.production_countries;\n\n  return (\n    <DetailsContainer>\n      <BackButton to={backLinkLocationRef.current}>\n        <RxArrowLeft />\n        Go back\n      </BackButton>\n      <MovieInfo>\n        {posterPath && (\n          <img src={`${imageUrl}${posterPath}`} alt={movie.title} />\n        )}\n        <div>\n          <h2>\n            {movie.title} ({releaseDate ? releaseDate : movie.status})\n          </h2>\n          <p>\n            Made in:{' '}\n            {productionCountries &&\n              productionCountries.map(country => country.name).join(', ')}\n          </p>\n          <p>User Score: {countUserScore()}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(' ')} </p>\n        </div>\n      </MovieInfo>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <AdditionalList>\n          <li>\n            <SubMenuLink to=\"cast\">\n              <RxArrowRight />\n              Cast\n            </SubMenuLink>\n          </li>\n          <li>\n            <SubMenuLink to=\"reviews\">\n              <RxArrowRight />\n              Reviews\n            </SubMenuLink>\n          </li>\n        </AdditionalList>\n        <Outlet />\n      </AdditionalInfo>\n    </DetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0cafd553b6a217ff7b99743b1693af60';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n"],"names":["BackButton","styled","Link","DetailsContainer","MovieInfo","AdditionalInfo","AdditionalList","SubMenuLink","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetchOneMovie","then","chosenMovie","catch","error","console","message","genres","releaseDate","Date","release_date","getFullYear","posterPath","poster_path","productionCountries","production_countries","to","current","src","alt","title","status","map","country","name","join","average","vote_average","Math","round","toFixed","countUserScore","overview","genre","axios","API_KEY","fetchTrending","params","api_key","page","data","results","fetchSearchResult","query","filter","toLowerCase","includes","log","fetchCast","language","fetchReviews"],"sourceRoot":""}